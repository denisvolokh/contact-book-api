version: '3'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - database
    env_file:
      - .env
    volumes:
      - ./api:/code/api
    command: >
      sh -c 'dockerize -wait tcp://database:5432 -timeout 1m &&
      uvicorn api.main:app --host 0.0.0.0 --port 5000 --reload'

  tasks:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
      - redis
    env_file:
      - .env
    volumes:
      - ./api:/code/api
    command: >
      sh -c 'dockerize -wait tcp://database:5432 -timeout 1m &&
      celery -A api.tasks.celery worker --loglevel=info'

  mkdocs:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    working_dir: /
    volumes:
      - ./docs:/docs
      - ./mkdocs.yml:/mkdocs.yml
    command: mkdocs serve --dev-addr=0.0.0.0:8000 --livereload

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
      - ./pg_backups:/pg_backups

  redis:
    image: redis:latest
    container_name: my-redis
    ports:
      - "6379:6379"

volumes:
  pg_data: {}
  pg_backups: {}